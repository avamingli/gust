/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    //R1=14
    (-14 0 0) // Vertex r0b = 0 
    (0 -14 0)// Vertex r0sb = 1 
    (14 0 0) // Vertex r1b = 2 
    (0 14 0) // Vertex r2b = 3 

    //R2=28.55 wall-inner
    (-28.55 0 0) // Vertex r2sb = 4 
    (0 -28.55 0) // Vertex r3b = 5 
    (28.55 0 0) // Vertex r4b = 6 
    (0 28.55 0) // Vertex r4sb = 7 

    //R3=38.1 wall-outer
    (-38.1 0 0) // Vertex r5b = 8 
    (0 -38.1 0) // Vertex r6b = 9 
    (38.1 0 0) // Vertex r5b = 10 
    (0 38.1 0) // Vertex r6b = 11

    //R4=41    AMI-1
    (-41 0 0) // Vertex r0b = 12 
    (0 -41 0)// Vertex r0sb = 13 
    (41 0 0) // Vertex r1b = 14 
    (0 41 0) // Vertex r2b = 15 

    //R4=41    AMI-2
    (-41 0 0) // Vertex r0b = 16 
    (0 -41 0)// Vertex r0sb = 17 
    (41 0 0) // Vertex r1b = 18 
    (0 41 0) // Vertex r2b = 19

    //R5=43
    (-43 0 0) // Vertex r0b = 20 
    (0 -43 0)// Vertex r0sb = 21 
    (43 0 0) // Vertex r1b = 22 
    (0 43 0) // Vertex r2b = 23



    //R1=14
    (-14 0 1) // Vertex r0b = 24 
    (0 -14 1)// Vertex r0sb = 25 
    (14 0 1) // Vertex r1b = 26 
    (0 14 1) // Vertex r2b = 27 

    //R2=28.55 wall-inner
    (-28.55 0 1) // Vertex r2sb = 28 
    (0 -28.55 1) // Vertex r3b = 29 
    (28.55 0 1) // Vertex r4b = 30 
    (0 28.55 1) // Vertex r4sb = 31

    //R3=38.1 wall-outer
    (-38.1 0 1) // Vertex r5b = 32 
    (0 -38.1 1) // Vertex r6b = 33 
    (38.1 0 1) // Vertex r5b = 34 
    (0 38.1 1) // Vertex r6b = 35

    //R4=41    AMI-1
    (-41 0 1) // Vertex r0b = 36 
    (0 -41 1)// Vertex r0sb = 37 
    (41 0 1) // Vertex r1b = 38 
    (0 41 1) // Vertex r2b = 39 

    //R4=41    AMI-2
    (-41 0 1) // Vertex r0b = 40 
    (0 -41 1)// Vertex r0sb = 41 
    (41 0 1) // Vertex r1b = 42 
    (0 41 1) // Vertex r2b = 43

    //R5=43
    (-43 0 1) // Vertex r0b = 44 
    (0 -43 1)// Vertex r0sb = 45 
    (43 0 1) // Vertex r1b = 46 
    (0 43 1) // Vertex r2b = 47

    //airfoil
    (-62.5 0 0	) // Vertex r2sb = 48
    (-30 50 0	) // Vertex r2sb = 49
    (-30 -50 0) // Vertex r2sb = 50
    //block slice=1
    (-30 1000 0	) // Vertex r2sb = 51
    (-30 -1000 0	) // Vertex r2sb = 52
    (-333.95 14.78 0) // Vertex r2sb = 53
    (-333.95 -14.78 0) // Vertex r2sb = 54
    //block slice=2
    (-400 100 0	) // Vertex r2sb = 55
    (-400 -100	0) // Vertex r2sb = 56
    (-400 1000	0) // Vertex r2sb = 57
    (-400 -1000	0) // Vertex r2sb = 58
    //block slice=3
    (-1600 100	0) // Vertex r2sb = 59
    (-1600 -100	0) // Vertex r2sb = 60
    (-1600 1000	0) // Vertex r2sb = 61
    (-1600 -1000 0) // Vertex r2sb = 62
    //block slice=4
    (0 1000 0) // Vertex r2sb = 63
    (0 -1000 0) // Vertex r2sb = 64
    //block slice=5
    (3600 0 0) // Vertex r2sb = 65
    (3600 43 0) // Vertex r2sb = 66
    (3600 -43 0) // Vertex r2sb = 67
    (3600 1000 0) // Vertex r2sb = 68
    (3600 -1000 0) // Vertex r2sb = 69

// z=1
   //airfoil
    (-62.5 0 1	) // Vertex r2sb = 70
    (-30 50 1	) // Vertex r2sb = 71
    (-30 -50 1	) // Vertex r2sb = 72
    //block slice=1
    (-30 1000 1	) // Vertex r2sb = 73
    (-30 -1000 1	) // Vertex r2sb = 74
    (-333.95 14.78 1) // Vertex r2sb = 75
    (-333.95 -14.78 1) // Vertex r2sb = 76
    //block slice=2
    (-400 100 1	) // Vertex r2sb = 77
    (-400 -100	1) // Vertex r2sb = 78
    (-400 1000	1) // Vertex r2sb = 79
    (-400 -1000	1) // Vertex r2sb = 80
    //block slice=3
    (-1600 100	1) // Vertex r2sb = 81
    (-1600 -100	1) // Vertex r2sb = 82
    (-1600 1000	1) // Vertex r2sb = 83
    (-1600 -1000 1) // Vertex r2sb = 84
    //block slice=4
    (0 1000 1) // Vertex r2sb = 85
    (0 -1000 1) // Vertex r2sb = 86
    //block slice=5
    (3600 0 1) // Vertex r2sb = 87
    (3600 43 1) // Vertex r2sb = 88
    (3600 -43 1) // Vertex r2sb = 89
    (3600 1000 1) // Vertex r2sb = 90
    (3600 -1000 1) // Vertex r2sb = 91
);

blocks
(
   // block0
    hex (0 1 2 3 24 25 26 27)
    rotor
    (24 24 1)
    simpleGrading (1 1 1)
    // block1
    hex (0 4 5 1 24 28 29 25)
    rotor
    (18 24 1)
    simpleGrading (1 1 1)

    // block2
    hex (1 5 6 2 25 29 30 26)
    rotor
    (18 24 1)
    simpleGrading (1 1 1)

    // block3
    hex (2 6 7 3 26 30 31 27)
    rotor
    (18 24 1)
    simpleGrading (1 1 1)

    // block4
    hex (3 7 4 0 27 31 28 24)
    rotor
    (18 24 1)
    simpleGrading (1 1 1)



 //   // block5
 //   hex (4 8 9 5 28 32 33 29)
 //   rotor
 //   (15 24 1)
 //   simpleGrading (1 1 1)

    // block6
    hex (5 9 10 6 29 33 34 30)
    rotor
    (15 24 1)
    simpleGrading (1 1 1)

//    // block7
//    hex (6 10 11 7 30 34 35 31)
 //   rotor
 //   (15 24 1)
 //   simpleGrading (1 1 1)

    // block8
    hex (7 11 8 4 31 35 32 28)
    rotor
    (15 24 1)
    simpleGrading (1 1 1)


    // block9
    hex (8 12 13 9 32 36 37 33)
    rotor
    (4 24 1)
    simpleGrading (1 1 1)

    // block10
    hex (9 13 14 10 33 37 38 34)
    rotor
    (4 24 1)
    simpleGrading (1 1 1)

    // block11
    hex (10 14 15 11 34 38 39 35)
    rotor
    (4 24 1)
    simpleGrading (1 1 1)

    // block12
    hex (11 15 12 8 35 39 36 32)
    rotor
    (4 24 1)
    simpleGrading (1 1 1)


    // block13
    hex (16 20 21 17 40 44 45 41)
    (4 24 1)
    simpleGrading (1 40 1)

    // block14
    hex (17 21 22 18 41 45 46 42)
    (4 24 1)
    simpleGrading (1 1 1)

    // block15
    hex (18 22 23 19 42 46 47 43)
    (4 24 1)
    simpleGrading (1 1 1)

    // block16
    hex (19 23 20 16 43 47 44 40)
    (4 24 1)
    simpleGrading (1 0.025 1)

//-----------------------
    // block17
    hex (23 49 48 20 47 71 70 44)
    (12 24 1)
    simpleGrading (1 0.025 1)

    // block18
    hex (20 48 50 21 44 70 72 45)
    (12 24 1)
    simpleGrading (1 40 1)

    // block19
    hex (63 51 49 23 85 73 71 47)
    (12 100 1)
    simpleGrading (1 1 1)

    // block20
    hex (21 50 52 64 45 72 74 86)
    (12 100 1)
    simpleGrading (1 1 1)

    // block21
    hex (49 55 53 48 71 77 75 70)
    (150 24 1)
    simpleGrading (1 0.025 1)

    // block22
    hex (48 54 56 50 70 76 78 72)
    (150 24 1)
    simpleGrading (1 40 1)

    // block23
    hex (51 57 55 49 73 79 77 71)
    (150 100 1)
    simpleGrading 
    (1 1 1 )

    // block24
    hex (50 56 58 52 72 78 80 74)
    (150 100 1)
    simpleGrading (1 1 1)

    // block25
    hex (53 55 56 54 75 77 78 76)
    (24 80 1)
    simpleGrading (40 1 1)

    // block26
    hex (55 59 60 56 77 81 82 78)
    (80 80 1)
    simpleGrading (1 1 1)

    // block27
    hex (57 61 59 55 79 83 81 77)
    (80 100 1)
    simpleGrading (1 1 1)

    // block28
    hex (56 60 62 58 78 82 84 80)
    (80 100 1)
    simpleGrading (1 1 1)

    // block29
    hex (66 23 22 65 88 47 46 87)
    (250 24 1)
    simpleGrading (1 1 1)
    // block30
    hex (65 22 21 67 87 46 45 89)
    (250 24 1)
    simpleGrading (1 1 1)
    // block31
    hex (68 63 23 66 90 85 47 88)
    (250 100 1)
    simpleGrading (1 1 1)
    // block32
    hex (67 21 64 69 89 45 86 91)
    (250 100 1)
    simpleGrading (1 1 1)

);

edges
(
    // R2=28.55 z=0
    arc 4 5 (-20.1878986028759 -20.1878986028759 0)
    arc 5 6 (20.1878986028759 -20.1878986028759 0)
    arc 6 7 (20.1878986028759 20.1878986028759 0)
    arc 7 4 (-20.1878986028759 20.1878986028759 0)
    // R2=28.55 z=1
    arc 28 29 (-20.1878986028759 -20.1878986028759 1)
    arc 29 30 (20.1878986028759 -20.1878986028759 1)
    arc 30 31 (20.1878986028759 20.1878986028759 1)
    arc 31 28 (-20.1878986028759 20.1878986028759 1)

    // R3=38.1 z=0
    arc 8 9 (-26.9407683632047 -26.9407683632047 0)
    arc 9 10 (26.9407683632047 -26.9407683632047 0)
    arc 10 11 (26.9407683632047 26.9407683632047 0)
    arc 11 8 (-26.9407683632047 26.9407683632047 0)
    // R3=38.1 z=1
    arc 32 33 (-26.9407683632047 -26.9407683632047 1)
    arc 33 34 (26.9407683632047 -26.9407683632047 1)
    arc 34 35 (26.9407683632047 26.9407683632047 1)
    arc 35 32 (-26.9407683632047 26.9407683632047 1)

    // R4=41 z=0 AMI1
    arc 12 13 (-28.9913780286484 -28.9913780286484 0)
    arc 13 14 (28.9913780286484 -28.9913780286484 0)
    arc 14 15 (28.9913780286484 28.9913780286484 0)
    arc 15 12 (-28.9913780286484 28.9913780286484 0)
    // R4=41 z=1 AMI1
    arc 36 37 (-28.9913780286484 -28.9913780286484 1)
    arc 37 38 (28.9913780286484 -28.9913780286484 1)
    arc 38 39 (28.9913780286484 28.9913780286484 1)
    arc 39 36 (-28.9913780286484 28.9913780286484 1)
    // R4=41 z=0 AMI2
    arc 16 17 (-28.9913780286484 -28.9913780286484 0)
    arc 17 18 (28.9913780286484 -28.9913780286484 0)
    arc 18 19 (28.9913780286484 28.9913780286484 0)
    arc 19 16 (-28.9913780286484 28.9913780286484 0)
    // R4=41 z=1 AMI2
    arc 40 41 (-28.9913780286484 -28.9913780286484 1)
    arc 41 42 (28.9913780286484 -28.9913780286484 1)
    arc 42 43 (28.9913780286484 28.9913780286484 1)
    arc 43 40 (-28.9913780286484 28.9913780286484 1)
    // R5=43 z=0 
    arc 20 21 (-30.4055915910214 -30.4055915910214 0)
    arc 21 22 (30.4055915910214 -30.4055915910214 0)
    arc 22 23 (30.4055915910214 30.4055915910214 0)
    arc 23 20 (-30.4055915910214 30.4055915910214 0)
    arc 48 49 (-55 30 0)
    arc 48 50 (-55 -30 0)
    arc 55 56 (-500 0 0)

    // R5=60 z=1 
    arc 44 45 (-30.4055915910214 -30.4055915910214 1)
    arc 45 46 (30.4055915910214 -30.4055915910214 1)
    arc 46 47 (30.4055915910214 30.4055915910214 1)
    arc 47 44 (-30.4055915910214 30.4055915910214 1)
    arc 70 71 (-55 30 1)
    arc 70 72 (-55 -30 1)
    arc 77 78 (-500 0 1)

    //airfoil z=0
    spline 48 53  
     (  
(       -64.1           0.608           0)
(	-76.701715	2.321355	0)
(	-87.438325	3.71551	        0)
(	-100.852225	5.378675	0)
(	-116.661595	7.23277 	0)
(	-134.5349	9.19636 	0)
(	-154.09699	11.18435	0)
(	-174.93703	13.10829	0)	
(	-196.61826	14.87241	0)
(	-218.68501	16.374535	0)
(	-240.67429	17.507915	0)
(	-262.12494	18.170375	0)
(	-282.58678	18.27255	0)
(       -301.62976      17.752525       0)
(       -318.85494      16.58346        0)
      )

    spline 53 54 
     (  
(	-342.561675	13.248285	0	)
(	-353.298285	10.516095	0	)
(	-361.132515	7.341655	0	)
(       -365.899665     3.812805        0       )
(	-367.5	        0	        0	)
(	-365.899665     -3.812805       0	)
(	-361.132515	-7.341655	0	)
(	-353.298285	-10.516095	0	)
(       -342.561675	-13.248285	0       )
      )

    spline 54 48 
     (  
(	-318.85494      -16.58346        0	)
(	-301.62976      -17.752525       0	)
(	-282.58678	-18.27255	0	)
(	-262.12494	-18.170375	0	)
(	-240.67429	-17.507915	0	)
(	-218.68501	-16.374535	0	)
(	-196.61826	-14.87241	0	)
(	-174.93703	-13.10829	0	)
(	-154.09699	-11.18435	0	)
(	-134.5349	-9.19636 	0	)
(	-116.661595	-7.23277 	0	)
(	-100.852225	-5.378675	0	)
(	-87.438325	-3.71551        0	)
(       -76.701715	-2.321355	0       )
(       -64.1           -0.608          0       )
      )



    //airfoil z=1
    spline 70 75  
     (  
(       -64.1           0.608           1)
(	-76.701715	2.321355	1)
(	-87.438325	3.71551	        1)
(	-100.852225	5.378675	1)
(	-116.661595	7.23277 	1)
(	-134.5349	9.19636 	1)
(	-154.09699	11.18435	1)
(	-174.93703	13.10829	1)	
(	-196.61826	14.87241	1)
(	-218.68501	16.374535	1)
(	-240.67429	17.507915	1)
(	-262.12494	18.170375	1)
(	-282.58678	18.27255	1)
(       -301.62976      17.752525       1)
(       -318.85494      16.58346        1)
      )

    spline 75 76 
     (  
(	-342.561675	13.248285	1	)
(	-353.298285	10.516095	1	)
(	-361.132515	7.341655	1	)
(       -365.899665     3.812805        1       )
(	-367.5	        0	        1	)
(	-365.899665     -3.812805       1	)
(	-361.132515	-7.341655	1	)
(	-353.298285	-10.516095	1	)
(       -342.561675	-13.248285	1       )
      )

    spline 76 70 
     (  
(	-318.85494      -16.58346        1	)
(	-301.62976      -17.752525       1	)
(	-282.58678	-18.27255	1	)
(	-262.12494	-18.170375	1	)
(	-240.67429	-17.507915	1	)
(	-218.68501	-16.374535	1	)
(	-196.61826	-14.87241	1	)
(	-174.93703	-13.10829	1	)
(	-154.09699	-11.18435	1	)
(	-134.5349	-9.19636 	1	)
(	-116.661595	-7.23277 	1	)
(	-100.852225	-5.378675	1	)
(	-87.438325	-3.71551        1	)
(       -76.701715	-2.321355	1       )
(       -64.1           -0.608          1       )
      )
    
);

boundary
(

    inlet
    {
        type patch;
        faces
        (
            //inlet
	(61 59 81 83)
	(59 60 82 81)
	(60 62 84 82)
        );
    }
    outlet
    {
        type patch;
        faces
        (
           //outlet
	(66 68 90 88)
	(65 66 88 87)
	(67 65 87 89)
        (69 67 89 91)
        );

    }

    upperAndLower
    {
        type wall;
        faces
        (
        //top
	(57 61 83 79)
	(51 57 79 73)
	(63 51 73 85)
	(68 63 85 90)
	//bottom
	(62 58 80 84)
	(58 52 74 80)
	(52 64 86 74)
	(64 69 91 86)
        );
    }

    rotor
    {
        type            wall;
        faces
        (     
            (4 5 29 28)
	    (4 28 32 8)
            (5 9 33 29)
            (8 32 33 9)

            (6 7 31 30)
            (6 30 34 10)  
            (7 11 35 31)
           (10 34 35 11)

        );
    }

    stator
    {
        type            wall;
        faces
        (

	//airfoil

	(48 53 75 70)
	(53 54 76 75)
	(54 48 70 76)

        );
    }

    AMI1
    {
        type            cyclicAMI;
        neighbourPatch  AMI2;
        transform       noOrdering;
/* optional
        surface
        {
            type            searchableCylinder; // none
            point1          (0 0 -1);
            point2          (0 0 1);
            radius          0.5;
        }
*/
        faces
        (
            (12 13 37 36)
            (13 14 38 37)
            (14 15 39 38)
            (15 12 36 39)
 
        );
    }

    AMI2
    {
        type            cyclicAMI;
        neighbourPatch  AMI1;
        transform       noOrdering;
/* optional
        surface
        {
            type            searchableCylinder; // none
            point1          (0 0 -1);
            point2          (0 0 1);
            radius          0.5;
        }
*/
        faces
        (
            (16 17 41 40)
            (17 18 42 41)
            (18 19 43 42)
            (19 16 40 43)
        );
    }

    front
    {
        type            empty;
        faces
        (
(	24	25	26	27	)
(	24	28	29	25	)
(	25	29	30	26	)
(	26	30	31	27	)
(	24	27	31	28	)
	
(	28	31	35	32	)
(	29	33	34	30	)
	
(	32	36	37	33	)
(	33	37	38	34	)
(	34	38	39	35	)
(	35	39	36	32	)
	
(	40	44	45	41	)
(	41	45	46	42	)
(	42	46	47	43	)
(	43	47	44	40	)


//block-back 17-32

(	44	47	71	70	)
(	44	70	72	45	)
(	85	73	71	47	)
(	45	72	74	86	)
(	71	77	75	70	)
(	70	76	78	72	)
(	73	79	77	71	)
(	72	78	80	74	)
(	75	77	78	76	)
(	77	81	82	78	)
(	79	83	81	77	)
(	78	82	84	80	)
(	88	47	46	87	)
(	87	46	45	89	)
(	90	85	47	88	)
(	89	45	86	91	)
        );
    }

    back
    {
        type            empty;
        faces
        (
//circle
            ( 0 3 2 1 )

            ( 0 1 5 4 )
            ( 1 2 6 5 )
            ( 2 3 7 6 )
            ( 0 4 7 3 )

            ( 4 8 11 7 )
            ( 5 6 10 9 )

            ( 8 9 13 12 )
            ( 9 10 14 13 )
            ( 10 11 15 14 )
            ( 11 8 12 15 )

            ( 16 17 21 20 )
            ( 17 18 22 21 )
            ( 18 19 23 22 )
            ( 19 16 20 23 )

//block-back 17-32

	( 20 48 49 23 )  //back-17
	( 21 50 48 20 )  //back-18
	( 23 49 51 63 )  //back-19

	( 64 52 50 21 )  //back-20
	( 48 53 55 49 )  //back-21

	( 50 56 54 48 )  //back-22
	( 49 55 57 51 )  //back-23
	( 52 58 56 50 )  //back-24

	( 54 56 55 53 )  //back-25
	( 56 60 59 55 )  //back-26

	( 55 59 61 57 )  //back-27
	( 58 62 60 56 )  //back-28
	( 65 22 23 66 )  //back-29
        ( 67 21 22 65 )  //back-30
        ( 66 23 63 68 )  //back-31
        ( 69 64 21 67 )  //back-32

        );
    }
);

// ************************************************************************* //
