/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

vertices
(
    //R1=1
    (-0.7071067812 0.7071067812 0) // Vertex r0b = 0 
    (-0.7071067812 -0.7071067812 0)// Vertex r0sb = 1 
    (0.7071067812 -0.7071067812 0) // Vertex r1b = 2 
    (0.7071067812 0.7071067812 0) // Vertex r2b = 3 

    //R2=27.5 wall-inner
    (-19.445436483 19.445436483 0) // Vertex r2sb = 4 
    (-19.445436483 -19.445436483 0) // Vertex r3b = 5 
    (19.445436483 -19.445436483 0) // Vertex r4b = 6 
    (19.445436483 19.445436483 0) // Vertex r4sb = 7 

    //R3=37.5 wall-outer
    (-26.516504295 26.516504295 0) // Vertex r5b = 8 
    (-26.516504295 -26.516504295 0) // Vertex r6b = 9 
    (26.516504295 -26.516504295 0) // Vertex r5b = 10 
    (26.516504295 26.516504295 0) // Vertex r6b = 11

    //R4=50    AMI-1
    (-35.35533906 35.35533906 0) // Vertex r0b = 12 
    (-35.35533906 -35.35533906 0)// Vertex r0sb = 13 
    (35.35533906 -35.35533906 0) // Vertex r1b = 14 
    (35.35533906 35.35533906 0) // Vertex r2b = 15 

    //R4=50    AMI-2
    (-35.35533906 35.35533906 0) // Vertex r0b = 16 
    (-35.35533906 -35.35533906 0)// Vertex r0sb = 17 
    (35.35533906 -35.35533906 0) // Vertex r1b = 18 
    (35.35533906 35.35533906 0) // Vertex r2b = 19 

    //R5=60
    (-42.426406872 42.426406872 0) // Vertex r2sb = 20 
    (-42.426406872 -42.426406872 0) // Vertex r3b =21 
    (42.426406872 -42.426406872 0) // Vertex r4b = 22 
    (42.426406872 42.426406872 0) // Vertex r4sb = 23 



    //R1=1
    (-0.7071067812 0.7071067812 1) // Vertex r0b = 24 
    (-0.7071067812 -0.7071067812 1)// Vertex r0sb = 25 
    (0.7071067812 -0.7071067812 1) // Vertex r1b = 26 
    (0.7071067812 0.7071067812 1) // Vertex r2b = 27 

    //R2=27.5 wall-inner
    (-19.445436483 19.445436483 1) // Vertex r2sb = 28 
    (-19.445436483 -19.445436483 1) // Vertex r3b = 29 
    (19.445436483 -19.445436483 1) // Vertex r4b = 30 
    (19.445436483 19.445436483 1) // Vertex r4sb = 31 

    //R3=37.5 wall-outer
    (-26.516504295 26.516504295 1) // Vertex r5b = 32 
    (-26.516504295 -26.516504295 1) // Vertex r6b = 33 
    (26.516504295 -26.516504295 1) // Vertex r5b = 34 
    (26.516504295 26.516504295 1) // Vertex r6b = 35

    //R4=50    AMI-1
    (-35.35533906 35.35533906 1) // Vertex r0b = 36 
    (-35.35533906 -35.35533906 1)// Vertex r0sb = 37 
    (35.35533906 -35.35533906 1) // Vertex r1b = 38 
    (35.35533906 35.35533906 1) // Vertex r2b = 39 

    //R4=50    AMI-2
    (-35.35533906 35.35533906 1) // Vertex r0b = 40 
    (-35.35533906 -35.35533906 1)// Vertex r0sb = 41 
    (35.35533906 -35.35533906 1) // Vertex r1b = 42 
    (35.35533906 35.35533906 1) // Vertex r2b = 43 

    //R5=60
    (-42.426406872 42.426406872 1) // Vertex r2sb = 44 
    (-42.426406872 -42.426406872 1) // Vertex r3b =45 
    (42.426406872 -42.426406872 1) // Vertex r4b = 46 
    (42.426406872 42.426406872 1) // Vertex r4sb = 47 


    //airfoil
    (	-100	0.474	0	) // Vertex r2sb = 48
    (	-100	-0.474	0	) // Vertex r2sb = 49
    (	-377.5	15.75	0	) // Vertex r2sb = 50
    (	-377.5	-15.75	0	) // Vertex r2sb = 51

    //block slice=1
    (	-1000	15.75	0	) // Vertex r2sb = 52
    (	-1000	-15.75	0	) // Vertex r2sb = 53
    (	-1000	500	0	) // Vertex r2sb = 54
    (	-1000	-500	0	) // Vertex r2sb = 55

    //block slice=2
    (	-377.5	500	0	) // Vertex r2sb = 56
    (	-377.5	-500	0	) // Vertex r2sb = 57

    //block slice=3
    (	-100	500	0	) // Vertex r2sb = 58
    (	-100	-500	0	) // Vertex r2sb = 59

    //block slice=4
    (	-42.426406872	500	0	) // Vertex r2sb = 60
    (	-42.426406872	-500	0	) // Vertex r2sb = 61

    //block slice=5
    (	42.426406872	500	0	) // Vertex r2sb = 62
    (	42.426406872	-500	0	) // Vertex r2sb = 63

    //block slice=6
    (	1000	500	0	) // Vertex r2sb = 64
    (	1000	-500	0	) // Vertex r2sb = 65
    (	1000	42.426406872	0	) // Vertex r2sb = 66
    (	1000	-42.426406872	0	) // Vertex r2sb = 67



// z=1
    //airfoil
    (	-100	0.474	1	) // Vertex r2sb = 68
    (	-100	-0.474	1	) // Vertex r2sb = 69
    (	-377.5	15.75	1	) // Vertex r2sb = 70
    (	-377.5	-15.75	1	) // Vertex r2sb = 71

    //block slice=1
    (	-1000	15.75	1	) // Vertex r2sb = 72
    (	-1000	-15.75	1	) // Vertex r2sb = 73
    (	-1000	500	1	) // Vertex r2sb = 74
    (	-1000	-500	1	) // Vertex r2sb = 75

    //block slice=2
    (	-377.5	500	1	) // Vertex r2sb = 76
    (	-377.5	-500	1	) // Vertex r2sb = 77

    //block slice=3
    (	-100	500	1	) // Vertex r2sb = 78
    (	-100	-500	1	) // Vertex r2sb = 79

    //block slice=4
    (	-42.426406872	500	1	) // Vertex r2sb = 80
    (	-42.426406872	-500	1	) // Vertex r2sb = 81

    //block slice=5
    (	42.426406872	500	1	) // Vertex r2sb = 82
    (	42.426406872	-500	1	) // Vertex r2sb = 83

    //block slice=6
    (	1000	500	1	) // Vertex r2sb = 84
    (	1000	-500	1	) // Vertex r2sb = 85
    (	1000	42.426406872	1	) // Vertex r2sb = 86
    (	1000	-42.426406872	1	) // Vertex r2sb = 87



);

blocks
(
    // block0
    hex (0 4 5 1 24 28 29 25)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block1
    hex (1 5 6 2 25 29 30 26)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block2
    hex (2 6 7 3 26 30 31 27)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block3
    hex (3 7 4 0 27 31 28 24)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)



 //   // block4
 //   hex (4 8 9 5 28 32 33 29)
 //   rotor
 //   (4 12 1)
 //   simpleGrading (1 1 1)

    // block5
    hex (5 9 10 6 29 33 34 30)
    rotor
    (4 12 1)
    simpleGrading (1 1 1)

//    // block6
//    hex (6 10 11 7 30 34 35 31)
 //   rotor
 //   (4 12 1)
 //   simpleGrading (1 1 1)

    // block7
    hex (7 11 8 4 31 35 32 28)
    rotor
    (4 12 1)
    simpleGrading (1 1 1)


    // block8
    hex (8 12 13 9 32 36 37 33)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block9
    hex (9 13 14 10 33 37 38 34)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block10
    hex (10 14 15 11 34 38 39 35)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)

    // block11
    hex (11 15 12 8 35 39 36 32)
    rotor
    (12 12 1)
    simpleGrading (1 1 1)


    // block12
    hex (16 20 21 17 40 44 45 41)
    (12 12 1)
    simpleGrading (1 1 1)

    // block13
    hex (17 21 22 18 41 45 46 42)
    (12 12 1)
    simpleGrading (1 1 1)

    // block14
    hex (18 22 23 19 42 46 47 43)
    (12 12 1)
    simpleGrading (1 1 1)

    // block15
    hex (19 23 20 16 43 47 44 40)
    (12 12 1)
    simpleGrading (1 1 1)

//-----------------------
    // block16
    hex (20 48 49 21 44 68 69 45)
    (20 12 1)
    simpleGrading (1 1 1)

    // block17
    hex (20 60 58 48 44 80 78 68)
    (100 20 1)
    simpleGrading (1 1 1)

    // block18
    hex (21 49 59 61 45 69 79 81)
    (20 100 1)
    simpleGrading (1 1 1)

    // block19
    hex (48 58 56 50 68 78 76 70)
    (100 100 1)
    simpleGrading (1 1 1)

    // block20
    hex (59 49 51 57 79 69 71 77)
    (100 100 1)
    simpleGrading (1 1 1)

    // block21
    hex (50 56 54 52 70 76 74 72)
    (100 50 1)
    simpleGrading (1 1 1)

    // block22
    hex (51 50 52 53 71 70 72 73)
    (20 50 1)
    simpleGrading 
    (
	(
		(0.2 0.1 0.8)
		(0.6 0.8 1)   
		(0.2 0.1 1.25)
	)
	1
	1
    )

    // block23
    hex (57 51 53 55 77 71 73 75)
    (100 50 1)
    simpleGrading (1 1 1)

    // block24
    hex (20 23 62 60 44 47 82 80)
    (12 100 1)
    simpleGrading (1 1 1)

    // block25
    hex (22 21 61 63 46 45 81 83)
    (12 100 1)
    simpleGrading (1 1 1)

    // block26
    hex (23 66 64 62 47 86 84 82)
    (100 100 1)
    simpleGrading (1 1 1)

    // block27
    hex (22 67 66 23 46 87 86 47)
    (100 12 1)
    simpleGrading (1 1 1)

    // block28
    hex (22 63 65 67 46 83 85 87)
    (100 100 1)
    simpleGrading (1 1 1)
  

);

edges
(
    // R1=1 z=0
    arc 0 1 (-1 0 0)
    arc 1 2 (0 -1 0)
    arc 2 3 (1 0 0)
    arc 3 0 (0 1 0)
    // R1=1 z=1
    arc 24 25 (-1 0 1)
    arc 25 26 (0 -1 1)
    arc 26 27 (1 0 1)
    arc 27 24 (0 1 1)

    // R2=27.5 z=0
    arc 4 5 (-27.5 0 0)
    arc 5 6 (0 -27.5 0)
    arc 6 7 (27.5 0 0)
    arc 7 4 (0 27.5 0)
    // R2=27.5 z=1
    arc 28 29 (-27.5 0 1)
    arc 29 30 (0 -27.5 1)
    arc 30 31 (27.5 0 1)
    arc 31 28 (0 27.5 1)

    // R3=37.5 z=0
    arc 8 9 (-37.5 0 0)
    arc 9 10 (0 -37.5 0)
    arc 10 11 (37.5 0 0)
    arc 11 8 (0 37.5 0)
    // R3=37.5 z=1
    arc 32 33 (-37.5 0 1)
    arc 33 34 (0 -37.5 1)
    arc 34 35 (37.5 0 1)
    arc 35 32 (0 37.5 1)

    // R4=50 z=0 AMI1
    arc 12 13 (-50 0 0)
    arc 13 14 (0 -50 0)
    arc 14 15 (50 0 0)
    arc 15 12 (0 50 0)
    // R4=50 z=1 AMI1
    arc 36 37 (-50 0 1)
    arc 37 38 (0 -50 1)
    arc 38 39 (50 0 1)
    arc 39 36 (0 50 1)

    // R4=50 z=0 AMI2
    arc 16 17 (-50 0 0)
    arc 17 18 (0 -50 0)
    arc 18 19 (50 0 0)
    arc 19 16 (0 50 0)
    // R4=50 z=1 AMI2
    arc 40 41 (-50 0 1)
    arc 41 42 (0 -50 1)
    arc 42 43 (50 0 1)
    arc 43 40 (0 50 1)

    // R5=60 z=0 
    arc 20 21 (-60 0 0)
    arc 21 22 (0 -60 0)
    arc 22 23 (60 0 0)
    arc 23 20 (0 60 0)
    // R5=60 z=1 
    arc 44 45 (-60 0 1)
    arc 45 46 (0 -60 1)
    arc 46 47 (60 0 1)
    arc 47 44 (0 60 1)

    //airfoil z=0
    spline 48 50  
     (  
(	-115	3.024	0	)
(	-130	5.43	0	)
(	-160	9.837	0	)
(	-190	13.74	0	)
(	-220	17.112	0	)
(	-250	19.851	0	)
(	-280	21.762	0	)
(	-310	22.506	0	)
(	-325	22.281	0	)
(	-340	21.516	0	)
(	-355	20.046	0	)
(	-370	17.559	0	)
      )

    spline 50 51 
     (  
(	-385	13.329	0	)
(	-392.5	9.804	0	)
(	-396.25	7.101	0	)
(	-400	0	0	)
(	-396.25	-7.101	0	)
(	-392.5	-9.804	0	)
(	-385	-13.329	0	)
      )

    spline 51 49 
     (  
(	-370	-17.559	0	)
(	-355	-20.046	0	)
(	-340	-21.516	0	)
(	-325	-22.281	0	)
(	-310	-22.506	0	)
(	-280	-21.762	0	)
(	-250	-19.851	0	)
(	-220	-17.112	0	)
(	-190	-13.74	0	)
(	-160	-9.837	0	)
(	-130	-5.43	0	)
(	-115	-3.024	0	)
(	-100	-0.474	0	)
      )



    //airfoil z=1
    spline 68 70  
     (  
(	-115    3.024   1	)
(	-130	5.43	1	)
(	-160	9.837	1	)
(	-190	13.74	1	)
(	-220	17.112	1	)
(	-250	19.851	1	)
(	-280	21.762	1	)
(	-310	22.506	1	)
(	-325	22.281  1	)
(	-340	21.516	1	)
(	-355	20.046	1	)
(	-370	17.559	1	)
      )

    spline 70 71 
     (  
(	-385	13.329	1	)
(	-392.5	9.804	1	)
(	-396.25	7.101	1	)
(	-400	0	1	)
(	-396.25	-7.101	1	)
(	-392.5	-9.804	1	)
(	-385	-13.329	1	)
      )

    spline 71 69 
     (  
(	-370	-17.559	1	)
(	-355	-20.046	1	)
(	-340	-21.516	1	)
(	-325	-22.281	1	)
(	-310	-22.506	1	)
(	-280	-21.762	1	)
(	-250	-19.851	1	)
(	-220	-17.112	1	)
(	-190	-13.74	1	)
(	-160	-9.837	1	)
(	-130	-5.43	1	)
(	-115	-3.024	1	)
(	-100	-0.474	1	)
      )

    
);

boundary
(

    inlet
    {
        type patch;
        faces
        (
            //inlet
	(54 52 72 74)
	(52 53 73 72)
	(53 55 75 73)
        );
    }
    outlet
    {
        type patch;
        faces
        (
           //outlet
	(66 64 84 86)
	(67 66 86 87)
	(65 67 87 85) 
        );

    }

    upperAndLower
    {
        type wall;
        faces
        (
        //top
	(56 54 74 76)
	(58 56 76 78)
	(60 58 78 80)
	(62 60 80 82)
	(64 62 82 84)

	//bottom
	(55 57 77 75)
	(57 59 79 77)
	(59 61 81 79)
	(61 63 83 81)
	(63 65 85 83)
        );
    }

    rotor
    {
        type            wall;
        faces
        (
            (0 24 25 1)
            (1 25 26 2)
            (2 26 27 3)
            (3 27 24 0)      

            (4 5 29 28)
	    (4 28 32 8)
            (5 9 33 29)
            (8 32 33 9)

            (6 7 31 30)
            (6 30 34 10)  
            (7 11 35 31)
           (10 34 35 11)

        );
    }

    stator
    {
        type            wall;
        faces
        (

	//airfoil

	(48 50 70 68)
	(50 51 71 70)
	(51 49 69 71)
	(49 48 68 69)

        );
    }

    AMI1
    {
        type            cyclicAMI;
        neighbourPatch  AMI2;
        transform       noOrdering;
/* optional
        surface
        {
            type            searchableCylinder; // none
            point1          (0 0 -1);
            point2          (0 0 1);
            radius          0.5;
        }
*/
        faces
        (
            (12 13 37 36)
            (13 14 38 37)
            (14 15 39 38)
            (15 12 36 39)
 
        );
    }

    AMI2
    {
        type            cyclicAMI;
        neighbourPatch  AMI1;
        transform       noOrdering;
/* optional
        surface
        {
            type            searchableCylinder; // none
            point1          (0 0 -1);
            point2          (0 0 1);
            radius          0.5;
        }
*/
        faces
        (
            (16 17 41 40)
            (17 18 42 41)
            (18 19 43 42)
            (19 16 40 43)
        );
    }

    front
    {
        type            empty;
        faces
        (
(	24	28	29	25	)
(	25	29	30	26	)
(	26	30	31	27	)
(	24	27	31	28	)
	
(	28	31	35	32	)
(	29	33	34	30	)
	
(	32	36	37	33	)
(	33	37	38	34	)
(	34	38	39	35	)
(	35	39	36	32	)
	
(	40	44	45	41	)
(	41	45	46	42	)
(	42	46	47	43	)
(	43	47	44	40	)


//block-back 16-28

(	44	68	69	45	)
(	44	80	78	68	)
(	45	69	79	81	)
(	68	78	76	70	)
(	69	71	77	79	)
(	70	76	74	72	)
(	70	72	73	71	)
(	71	73	75	77	)
(	47	82	80	44	)
(	46	45	81	83	)
(	47	86	84	82	)
(	46	87	86	47	)
(	83	85	87	46	)




        );
    }

    back
    {
        type            empty;
        faces
        (
//circle
            ( 0 1 5 4 )
            ( 1 2 6 5 )
            ( 2 3 7 6 )
            ( 0 4 7 3 )

            ( 4 8 11 7 )
            ( 5 6 10 9 )

            ( 8 9 13 12 )
            ( 9 10 14 13 )
            ( 10 11 15 14 )
            ( 11 8 12 15 )

            ( 16 17 21 20 )
            ( 17 18 22 21 )
            ( 18 19 23 22 )
            ( 19 16 20 23 )

//block-back 16-28

	( 20 21 49 48 )  //back-16
	( 20 48 58 60 )  //back-17
	( 21 61 59 49 )  //back-18

	( 48 50 56 58 )  //back-19
	( 49 59 57 51 )  //back-20

	( 50 52 54 56 )  //back-21
	( 50 51 53 52 )  //back-22
	( 51 57 55 53 )  //back-23

	( 23 20 60 62 )  //back-24
	( 22 63 61 21 )  //back-25

	( 23 62 64 66 )  //back-26
	( 22 23 66 67 )  //back-27
	( 63 22 67 65 )  //back-28

        );
    }
);

// ************************************************************************* //
